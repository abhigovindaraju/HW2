BEGIN
--------------------------------------------------------------------
Q1: Is there any compile error with the following code (if any)?

	unsigned int Arr[16];
	3[Arr] = 7; 
 
Explain:

There will be no compiler error....The compiler while dereferncing will treat both 3[Arr] and Arr[3] the same way.

--------------------------------------------------------------------
Q2: What is the difference between the following 3 statements? 

const int * px; 
int const * px; 
int * const px; 

Is there any compile error for the following cases?
case1: 
int x = 13; 
const int * px; 
px = & x; 

case 2: 
int x = 13; 
int const * px; 
px = & x; 

case 3: 
int x = 13; 
int * const px; 
px = & x; 

Explain:

Case 1 - px is a pointer to a constant integer, which means that interger can't be modified but the pointer can be modified.

Case 2 - case 3 - px is a constant pointer to a integer, which means that the integer can be modified but the pointer can't be modified. 

case 3 - There will be a compiler error on this. 










--------------------------------------------------------------------
Q3: Write a function to set or clear ith bit of a 32-bit register. 
	Where ith (0-based) := {0, 1, 2, …, 31 } 
	
	

void reg_set(volatile unsigned int * pReg, int ith) 
{ 
*pReg |= 1<<ith;
} 

void reg_clear(volatile unsigned int * pReg, int ith) 
{ 
*pReg &= ~(1<<ith);
} 



--------------------------------------------------------------------
Q4: Write a swap function in C.
void swap(unsigned int * px, unsigned int *py) { 
int temp;
temp = *px;
*px = *py;
*py = temp;
} 

--------------------------------------------------------------------
Q5:	What is the output of the following code? (Given: sizeof(unsigned int) is 4) Page 34 

unsigned int Arr[16]; 
unsigned int a0 = (unsigned int) &Arr[0]; 
unsigned int a3 = (unsigned int) &Arr[3]; 
printf(“%d\n”, a3 – a0); 

The output will be 12.......since the memory location will be allocated in the following way 0----4---8----C 

In the above code Arr[3] will be assigned 12 (memory location for example 0x8000000C) while Arr[0] will be assigned 0
(memory location 0x80000000) so the difference will be 12. 


END
